#!/usr/bin/python2.7

import argparse
import string
import base64

trickbot_b64_charset  = "HJIA/CB+FGKLNOP3RSlUVWXYZfbcdeaghi5kmn0pqrstuvwx89o12467MEDyzQjT"

def is_charset(line):
    line = line.strip()
    for x in line:
        if x not in trickbot_b64_charset:
            return False
    return True

def is_printable(line):
    line = line.strip()
    for x in line:
        if x not in string.printable:
            return False
    return True

def trick_base64(s):
    if s is None:
        return None
    std_base64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
    s = s.translate(string.maketrans(trickbot_b64_charset, std_base64chars))
    data = base64.b64decode(s)
    data = data.replace(';', '8')
    data = data.replace(':', '9')
    return data

def append_padding(val):
    mod = len(val) % 3
    while (len(val) % 4) != 0:
        val += "="
    return val
    
def process(line, my_charset):
    pair = line.split('=')
    if len(pair) < 2:
       return
    val  = pair[1].strip()

    decoded = None
    if val is not None and is_charset(val, my_charset):
        val = append_padding(val)
        try:
            decoded = trick_base64(val, my_charset)
        except:
            decoded = None
    return decoded

def process_settings(fname):
    out_lines = []
    with open(fname) as f:
        for line in f:
            decoded = process(line)
            if decoded and is_printable(decoded):
                out_lines.append(decoded)
    return out_lines

def main():
    parser = argparse.ArgumentParser(description="TrickBot settings decoder: decodes botkey from the settings file")
    parser.add_argument('--file', dest="file", default=None, help="TrickBot settings file (i.e. settings.ini)", required=True)
    args = parser.parse_args()

    out_lines = process_settings(args.file)
    for out_line in out_lines:
        print out_line

if __name__ == "__main__":
    main()
